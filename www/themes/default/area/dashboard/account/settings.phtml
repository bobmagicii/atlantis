<?php

/**
 * @var Atlantis\Prototype\User $User
 */

?>

<?php $Surface->Area('dashboard/promo') ?>

<div id="UserData" class="d-none" data-user-id="<?php echo $User->ID ?>"></div>

<div class="container pb-4">

	<?php
	$Surface
	->Set('Element.Items',[
		'Account' => Atlantis\Site\Endpoint::Get('Atlantis.Dashboard.Account.Index')
	])
	->Set('Element.Active','Change Password')
	->Area('dashboard/breadcrumbs');
	?>

	<!-- IMAGES -->
	<div class="row align-items-center mb-6">
		<div class="col-12 mb-2">
			<h2 class="font-size-large font-weight-bold">Profile Graphics</h2>
			<hr class="mb-2 mt-2" />
			You can set a Profile Icon and a Header Image for your user profile.
		</div>
		<div class="col-12 mb-2">
			<?php
			echo (new Atlantis\Element\PagePromo)
			->SetURL($User->GetURL())
			->SetImageURL($User->GetImageHeaderURL())
			->SetIconURL($User->GetImageIconURL())
			->SetTitle($User->Alias ?? '')
			->AddClasses('mb-0','rounded','BlogHeaderDemo');
			?>
		</div>
		<div class="col-12 col-md-6 mb-2 mb-md-0">
			<div class="row tight">
				<div class="col">
					<button id="CmdImageIcon" class="btn btn-dark btn-lg btn-block"><i class="fas fa-fw fa-image"></i> Upload Icon</button>
					<input type="file" class="d-none" id="InputImageIcon" />
				</div>
				<div class="col-auto">
					<button id="CmdRemoveImageIcon" class="btn btn-danger btn-lg"><i class="fas fa-fw fa-times"></i></button>
				</div>
			</div>
		</div>
		<div class="col-12 col-md-6 mb-2 mb-md-0">
			<div class="row tight">
				<div class="col">
					<button id="CmdImageHeader" class="btn btn-dark btn-lg btn-block"><i class="fas fa-fw fa-image"></i> Upload Header</button>
					<input type="file" class="d-none" id="InputImageHeader" />
				</div>
				<div class="col-auto">
					<button id="CmdRemoveImageHeader" class="btn btn-danger btn-lg"><i class="fas fa-fw fa-times"></i></button>
				</div>
			</div>
		</div>
	</div>

	<!-- DETAILS -->
	<div id="DashAccountDetails" class="row tight align-items-end mb-6">
		<div class="col-12 mb-2">
			<h2 class="font-size-large font-weight-bold">Profile Bio</h2>
			<hr class="mb-2 mt-2" />
			A short little bio about yourself if you wish to share it.
		</div>
		<div class="col mb-2">
			<textarea id="InputDetails" type="text" autocomplete="off" class="form-control" placeholder="Details..." rows="3"><?php echo $Printer($User->Details) ?></textarea>
		</div>
		<div class="col-auto mb-2">
			<div class="d-flex">
				<i class="ActionStatus ActionStatusThink fa fas fa-cog fa-spin font-size-anim font-size-normal font-size-zero"></i>
				<i class="ActionStatus ActionStatusGood fa fas fa-check font-size-anim font-size-normal font-size-zero text-success"></i>
				<i class="ActionStatus ActionStatusBad fa fas fa-times font-size-anim font-size-normal font-size-zero text-danger"></i>
			</div>
		</div>
		<div class="col-auto mb-2">
			<butt type="button" class="btn btn-block btn-dark ActionCommit">Save</button>
		</div>
	</div>

	<!-- LOCATION -->
	<div id="DashAccountLocation" class="row tight align-items-center mb-6">
		<div class="col-12 mb-2">
			<h2 class="font-size-large font-weight-bold">Location</h2>
			<hr class="mb-2 mt-2" />
			Some location like city or state if you wish to share it. Most people will probably put something stupid like "behind you" or "at your mom's house". It is not used for anything except being on the profile.
		</div>
		<div class="col mb-2">
			<input id="InputLocation" type="text" autocomplete="off" class="form-control" placeholder="Location..." value="<?php echo $Printer($User->Location) ?>" />
		</div>
		<div class="col-auto mb-2">
			<div class="d-flex">
				<i class="ActionStatus ActionStatusThink fa fas fa-cog fa-spin font-size-anim font-size-normal font-size-zero"></i>
				<i class="ActionStatus ActionStatusGood fa fas fa-check font-size-anim font-size-normal font-size-zero text-success"></i>
				<i class="ActionStatus ActionStatusBad fa fas fa-times font-size-anim font-size-normal font-size-zero text-danger"></i>
			</div>
		</div>
		<div class="col-auto mb-2">
			<butt type="button" class="btn btn-block btn-dark ActionCommit">Save</button>
		</div>
	</div>

	<!-- ADULT CONTENT -->
	<div id="UserOptAdult" class="mb-6">
		<h2 class="font-size-large font-weight-bold">Adult Content</h2>
		<hr class="mb-2 mt-2" />
		<p>In the event people post Adult Content on this site, what would you like to do about it? Keep in mind this requires people be honest with flagging their content. You can always report content that needs to be flagged, and if someone is without honour we can force it.</p>
		<div class="row tight align-items-center">
			<div class="col-auto font-weight-bold">
				Filter:
			</div>
			<div class="col-auto">
				<div class="d-flex">
					<i class="ActionStatus ActionStatusThink fa fas fa-cog fa-spin font-size-anim font-size-normal font-size-zero"></i>
					<i class="ActionStatus ActionStatusGood fa fas fa-check font-size-anim font-size-normal font-size-zero text-success"></i>
					<i class="ActionStatus ActionStatusBad fa fas fa-times font-size-anim font-size-normal font-size-zero text-danger"></i>
				</div>
			</div>
			<div class="col">
				<select id="InputOptAdult" class="ActionCommit form-control" autocomplete="off">
					<option value="0" <?php echo ($User->OptAdult===0)?('selected'):('') ?>>Do not show me any adult content ever.</option>
					<option value="1" <?php echo ($User->OptAdult===1)?('selected'):('') ?>>Allow in listings but with warnings.</option>
					<option value="2" <?php echo ($User->OptAdult===2)?('selected'):('') ?>>Give it to me, I can take it.</option>
				</select>
			</div>
		</div>
	</div>

	<!-- PRIVACY: OPTALLOWSEEN -->
	<div id="AccountOptAllowSeen" class="mb-6">
		<h2 class="font-size-large font-weight-bold">Privacy: Online Status</h2>
		<hr class="mb-2 mt-2" />
		<p>There are a few places where people who have recently visited may be listed as Recent Visitors to promote the concept of being an actual social network.</p>
		<div class="row tight align-items-center">
			<div class="col-auto font-weight-bold">
				Filter:
			</div>
			<div class="col-auto">
				<div class="d-flex">
					<i class="ActionStatus ActionStatusThink fa fas fa-cog fa-spin font-size-anim font-size-normal font-size-zero"></i>
					<i class="ActionStatus ActionStatusGood fa fas fa-check font-size-anim font-size-normal font-size-zero text-success"></i>
					<i class="ActionStatus ActionStatusBad fa fas fa-times font-size-anim font-size-normal font-size-zero text-danger"></i>
				</div>
			</div>
			<div class="col">
				<select id="InputOptAllowSeen" class="ActionCommit form-control" autocomplete="off">
					<option value="0" <?php echo ($User->OptAllowSeen===0)?('selected'):('') ?>>Do not include me in the Recent Visitors.</option>
					<option value="1" <?php echo ($User->OptAllowSeen===1)?('selected'):('') ?>>Include me in the list of Recent Visitors.</option>
				</select>
			</div>
		</div>
	</div>

	<!-- EMAIL -->
	<div id="DashAccountEmail" class="row tight align-items-center mb-6">
		<div class="col-12 mb-2">
			<h2 class="font-size-large font-weight-bold">Email Address</h2>
			<hr class="mb-2 mt-2" />
			The address you use to log in and have notifications sent to.
		</div>
		<div class="col mb-2">
			<input id="InputEmail" type="text" autocomplete="off" class="form-control" placeholder="Email Address..." value="<?php echo $Printer($User->Email) ?>" />
		</div>
		<div class="col-auto mb-2">
			<div class="d-flex">
				<i class="ActionStatus ActionStatusThink fa fas fa-cog fa-spin font-size-anim font-size-normal font-size-zero"></i>
				<i class="ActionStatus ActionStatusGood fa fas fa-check font-size-anim font-size-normal font-size-zero text-success"></i>
				<i class="ActionStatus ActionStatusBad fa fas fa-times font-size-anim font-size-normal font-size-zero text-danger"></i>
			</div>
		</div>
		<div class="col-auto mb-2">
			<butt type="button" class="btn btn-block btn-dark ActionCommit">Save</button>
		</div>
	</div>

</div>

<script type="module">
import UploadButton from '/share/atlantis/element/upload-button.js';
import StatusHandler from '/share/atlantis/element/status-handler.js';

jQuery(document)
.ready(function(){

	let UserData = jQuery('#UserData');
	let UserID = UserData.attr('data-user-id');

	let OptAllowSeen = new StatusHandler({
		'Element': '#AccountOptAllowSeen',
		'OnCommit': function(){
			let Input = jQuery.trim(jQuery('#InputOptAllowSeen').val());

			Atlantis.Request({
					'Method': 'PATCH',
					'URL': '/api/v1/user/entity',
					'Data': { 'Fields': { 'OptAllowSeen': Input } },
					'OnSuccess': (Result)=> {
						this
						.SetStatus('good')
						.Notify({
							'Title': 'Account Settings',
							'Content': 'Your account online status privacy has been updated.',
							'ContentClass': 'alert-success'
						});
						return;
					},
					'OnError': (Result)=> {
						this
						.SetStatus('bad')
						.Notify({
							'Title': 'Account Settings',
							'Content': 'Error: ' + Result.Message,
							'ContentClass': 'alert-danger'
						});
						return;
					}
				});

			return;
		}
	});

	let OptAdult = new StatusHandler({
		'Element': '#UserOptAdult',
		'OnCommit': function(){
			let Input = jQuery.trim(jQuery('#InputOptAdult').val());

			Atlantis.Request({
					'Method': 'PATCH',
					'URL': '/api/v1/user/entity',
					'Data': { 'Fields': { 'OptAdult': Input } },
					'OnSuccess': (Result)=> {
						this
						.SetStatus('good')
						.Notify({
							'Title': 'Account Settings',
							'Content': 'Your account Adult Content setting has been updated.',
							'ContentClass': 'alert-success'
						});
						return;
					},
					'OnError': (Result)=> {
						this
						.SetStatus('bad')
						.Notify({
							'Title': 'Account Settings',
							'Content': 'Error: ' + Result.Message,
							'ContentClass': 'alert-danger'
						});
						return;
					}
				});

			return;
		}
	});

	let Email = new StatusHandler({
		'Element': '#DashAccountEmail',
		'OnCommit': function(){
			let Input = jQuery.trim(jQuery('#InputEmail').val());

			Atlantis.Request({
				'Method': 'PATCH',
				'URL': '/api/v1/user/entity',
				'Data': { 'Fields': { 'Email': Input } },
				'OnSuccess': (Result)=> {
					this.SetStatus('good');
					Atlantis.Toaster({
						'Title': 'Account Settings',
						'Content': 'Your e-mail address has been updated.',
						'ContentClass': 'alert-success'
					});
					return;
				},
				'OnError': (Result)=> {
					this.SetStatus('bad');
					Atlantis.Toaster({
						'Title': 'Account Settings',
						'Content': 'Error: ' + Result.Message,
						'ContentClass': 'alert-danger'
					});
					return;
				}
			});

			return;
		}
	});

	let Details = new StatusHandler({
		'Element': '#DashAccountDetails',
		'OnCommit': function(){
			let Input = jQuery.trim(jQuery('#InputDetails').val());

			Atlantis.Request({
				'Method': 'PATCH',
				'URL': '/api/v1/user/entity',
				'Data': { 'Fields': { 'Details': Input } },
				'OnSuccess': (Result)=> {
					this.SetStatus('good');
					Atlantis.Toaster({
						'Title': 'Account Settings',
						'Content': 'Your profile bio has been updated.',
						'ContentClass': 'alert-success'
					});
					return;
				},
				'OnError': (Result)=> {
					this.SetStatus('bad');
					Atlantis.Toaster({
						'Title': 'Account Settings',
						'Content': 'Error: ' + Result.Message,
						'ContentClass': 'alert-danger'
					});
					return;
				}
			});

			return;
		}
	});

	let Location = new StatusHandler({
		'Element': '#DashAccountLocation',
		'OnCommit': function(){
			let Input = jQuery.trim(jQuery('#InputLocation').val());

			Atlantis.Request({
				'Method': 'PATCH',
				'URL': '/api/v1/user/entity',
				'Data': { 'Fields': { 'Location': Input } },
				'OnSuccess': (Result)=> {
					this.SetStatus('good');
					Atlantis.Toaster({
						'Title': 'Account Settings',
						'Content': 'Your location has been updated.',
						'ContentClass': 'alert-success'
					});
					return;
				},
				'OnError': (Result)=> {
					this.SetStatus('bad');
					Atlantis.Toaster({
						'Title': 'Account Settings',
						'Content': 'Error: ' + Result.Message,
						'ContentClass': 'alert-danger'
					});
					return;
				}
			});

			return;
		}
	});

	let UploadIcon = new UploadButton({
		'SelectorButton': '#CmdImageIcon',
		'SelectorInput': '#InputImageIcon',
		'FileType': UploadButton.FileTypeImage,
		'URL': '/api/v1/user/icon',
		'Data': {
			'ID': UserID
		},
		'OnItemComplete': function(Status,Result,File){
			if(Result.Error !== 0) {
				alert(Result.Message);
				return;
			}

			jQuery('.BlogHeaderDemo .ImageIcon')
			.css('background-image','url(' + Result.Payload.ImageURL + ')')

			return;
		},
		'OnQueueComplete': function(){
			this.Reset();
			return;
		}
	});

	let UploadHeader = new UploadButton({
		'SelectorButton': '#CmdImageHeader',
		'SelectorInput': '#InputImageHeader',
		'FileType': UploadButton.FileTypeImage,
		'URL': '/api/v1/user/header',
		'Data': {
			'ID': UserID
		},
		'OnItemComplete': function(Status,Result,File){
			if(Result.Error !== 0) {
				alert(Result.Message);
				return;
			}

			jQuery('.BlogHeaderDemo')
			.css('background-image','url(' + Result.Payload.ImageURL + ')')

			return;
		},
		'OnQueueComplete': function(){
			this.Reset();
			return;
		}
	});

	jQuery('#CmdRemoveImageIcon')
	.on('click',function(){

		if(confirm('Reset the icon image to default?'))
		Atlantis.Request({
			'Method': 'PATCH',
			'URL': '/api/v1/user/entity',
			'Data': { 'ID': UserID, 'Fields': { 'RemoveImageIcon': 1 } },
			'OnSuccess': function(Result){
				jQuery('.BlogHeaderDemo .ImageIcon')
				.css('background-image','url(' + Result.Payload.ImageIconURL + ')')

				return;
			}
		});

		return;
	});

	jQuery('#CmdRemoveImageHeader')
	.on('click',function(){

		if(confirm('Reset the header image to default?'))
		Atlantis.Request({
			'Method': 'PATCH',
			'URL': '/api/v1/user/entity',
			'Data': { 'ID': UserID, 'Fields': { 'RemoveImageHeader': 1 } },
			'OnSuccess': function(Result){
				jQuery('.BlogHeaderDemo')
				.css('background-image','url(' + Result.Payload.ImageHeaderURL + ')')

				return;
			}
		});

		return;
	});

	return;
});
</script>
