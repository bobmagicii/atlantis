
<?php $Surface->Area('dashboard/promo') ?>

<style type="text/css">

</style>

<div class="container pt-4 pb-4">

	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a href="<?php echo Atlantis\Site\Endpoint::Get('Atlantis.Dashboard.Home') ?>">Dashboard</a></li>
		<li class="breadcrumb-item">Account</li>
		<li class="breadcrumb-item active">Images</li>
	</ol>

	<div id="Gallery" class="jumbotron-secondary p-4 Gallery">
		<div class="text-center p-4">
			<i class="fas fa-fw fa-asterisk fa-spin"></i> Loading...
		</div>
	</div>

</div>

<script type="text/javascript">

class AtlantisImageManager {

	constructor(Opt) {
	/*//
	@date 2020-10-18
	//*/

		this.Container = null;
		this.Page = 1;
		this.Selected = new Array;

		NUI.Util.MergeProperties(Opt,this);

		if(typeof this.Container === 'string')
		this.Container = jQuery(this.Container);

		if(this.Conatiner instanceof HTMLElement)
		this.Container = jQuery(this.Container);

		if(!(this.Container instanceof jQuery))
		throw "invalid Container object";

		this.LoadPage(this.Page);
		return;
	}

	async LoadPage(Num) {
	/*//
	@date 2020-10-18
	//*/

		let Result = null;

		////////

		this.Page = Num;
		this.ResetPage();

		try { Result = await this.FetchPage(Num); }
		catch(Error) { alert('Error Fetching Data'); return; }

		this.ResetPage(this.GeneratePage(Result));
		this.UpdateSelectedInfo();

		return;
	}

	FetchPage(Num) {
	/*//
	@date 2020-10-18
	//*/

		return new Promise(function(Next,Halt){
			Atlantis.Request({
				'Method': 'LIST',
				'URL': '/api/v1/image/entity',
				'Data': { 'Page': Num },
				'OnSuccess': function(Result){
					Next(Result);
					return;
				},
				'OnError': function(Result){
					Halt(Result);
					return;
				}
			});
		});
	}

	ResetPage(Contents) {
	/*//
	@date 2020-10-18
	//*/

		if(Contents === null || typeof Contents === 'undefined')
		Contents = (
			jQuery('<div />')
			.addClass('text-center p-4')
			.append(
				jQuery('<i />')
				.addClass('fas fa-fw fa-asterisk fa-spin')
			)
			.append(
				jQuery('<span />')
				.addClass('ml-1')
				.text('Loading...')
			)
		);

		this.Container
		.empty()
		.append(Contents);

		return;
	}

	GeneratePage(Result) {
	/*//
	@date 2020-10-18
	//*/

		let that = this;
		let Row = null;

		////////

		Row = (
			jQuery('<div class="Header" />')
			.addClass('row align-items-center')
			.append(
				jQuery('<div />')
				.addClass('col-auto mb-4')
				.text(`Page ${Result.Payload.Page} of ${Result.Payload.PageCount}`)
			)
			.append(
				jQuery('<div />')
				.addClass('col-auto mb-4')
				.text(`${Result.Payload.Total} Images`)
			)
			.append(
				jQuery('<div />')
				.addClass('col-auto mb-4')
				.text(`${Result.Payload.UserBytesReadable}`)
			)
			.append(
				jQuery('<div />')
				.addClass('col')
			)
			.append(
				jQuery('<div />')
				.addClass('col-auto mb-4 SelectedInfo')
			)
			.append(
				jQuery('<div />')
				.addClass('col-auto mb-4 SelectedActions')
				.append(
					jQuery('<button />')
					.addClass('btn btn-danger btn-sm')
					.append('<i class="fas fa-fw fa-trash"></i>')
					.on('click',function(){
						that.OnDeleteItems();
						return;
					})
				)
			)
			.append(
				jQuery('<div />')
				.addClass('col-12')
			)
		);

		jQuery(Result.Payload.Payload)
		.each(function(){

			Row.append(
				jQuery('<div />')
				.addClass('col-4 col-sm-3 col-md-2 mb-4 GalleryItem')
				.addClass(that.IsSelected(this.ID)?'Selected':'')
				.attr('data-image-id',this.ID)
				.append(
					jQuery('<div />')
					.addClass('WallpaperedBox Square rounded')
					.css({
						'background-image': `url(${this.Sources.Thumbnail})`
					})
					.append(
						jQuery('<div />')
						.addClass('row TopLeft')
						.append(
							jQuery('<div />')
							.addClass('col-auto')
							.append(
								jQuery('<button />')
								.attr('type','button')
								.addClass('btn btn-dark btn-sm SelectBtn')
								.html('<i class="fas fa-fw fa-square"></i>')
								.on('click',function(){
									that.OnClickItem(jQuery(this).parents('.GalleryItem'));
									return false;
								})
							)
						)
					)
				)
			);

			return;
		});

		return Row;
	}

	IsSelected(ImageID) {
	/*//
	@date 2020-10-18
	//*/

		return this.Selected.indexOf(ImageID) > -1;
	}

	UpdateSelectedInfo() {
	/*//
	@date 2020-10-18
	//*/

		this.Container.find('.SelectedInfo')
		.text(`${this.Selected.length} Selected`)

		return;
	}

	////////////////////////////////
	////////////////////////////////

	OnClickItem(Item) {
	/*//
	@date 2020-10-18
	//*/

		let ImageID = Item.attr('data-image-id');

		if(this.IsSelected(ImageID))
		this.OnDeselectItem(ImageID,Item);

		else
		this.OnSelectItem(ImageID,Item);

		return;
	}

	OnSelectItem(ImageID,Item) {
	/*//
	@date 2020-10-18
	//*/

		this.Selected.push(ImageID);
		Item.addClass('Selected');

		(Item.find('.SelectBtn'))
		.addClass('btn-primary')
		.removeClass('btn-dark')
		.trigger('blur')
		.find('i')
		.addClass('fa-check-square')
		.removeClass('fa-square');

		this.UpdateSelectedInfo();
		return;
	}

	OnDeselectItem(ImageID,Item) {
	/*//
	@date 2020-10-18
	//*/

		this.Selected = Atlantis.FilterArrayStrip(
			this.Selected,
			ImageID
		);

		Item.removeClass('Selected');

		(Item.find('.SelectBtn'))
		.addClass('btn-dark')
		.removeClass('btn-primary')
		.trigger('blur')
		.find('i')
		.addClass('fa-square')
		.removeClass('fa-check-square');

		this.UpdateSelectedInfo();
		return;
	}

	OnDeleteItems() {
	/*//
	@date 2020-10-18
	//*/

		let that = this;

		if(this.Selected.length === 0)
		return;

		if(confirm(`Really delete ${this.Selected.length} items? This cannot be undone.`)) {
			that.ResetPage();
			Atlantis.Request({
				'Method': 'DELETE',
				'URL': '/api/v1/image/entity',
				'Data': { 'ID': this.Selected },
				'OnSuccess': function() {
					that.Selected.length = 0;
					that.LoadPage(that.Page);
					return;
				}
			});
		}

		return;
	}

}

jQuery(document)
.ready(function(){

	let Manager = new AtlantisImageManager({
		'Container': '#Gallery'
	});

	return;
});
</script>
