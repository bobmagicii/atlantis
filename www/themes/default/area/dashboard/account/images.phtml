<?php

/**
 * @var Atlantis\Prototype\Blog $Blog
 * @var Atlantis\Datastore $Blogs
 */

?>

<style type="text/css">

.GalleryItem .WallpaperedBox {
	border: 1px solid #666;
}

.GalleryItem .WallpaperedBox span {
	display: inline-block;
	background: #000c;
	border-radius: 4px;
	color: #fff;
	padding: 0px 3px;
}

</style>

<?php $Surface->Area('dashboard/promo') ?>

<div class="container pt-4 pb-4">

	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a href="<?php echo Atlantis\Site\Endpoint::Get('Atlantis.Dashboard.Home') ?>">Dashboard</a></li>
		<li class="breadcrumb-item">Account</li>
		<li class="breadcrumb-item active">Images</li>
	</ol>

	<div class="jumbotron jumbotron-secondary p-4 mb-4">
		<div class="row justify-content-center align-items-center">
			<div class="col-auto mb-4">
				<div id="BlogChooser" class="dropdown" data-blog-id="<?php $Printer($Route->Get->Blog) ?>">
					<button class="btn btn-dark btn-lg dropdown-toggle" data-toggle="dropdown">
						<?php $Printer($Blog ? $Blog->Title : 'Filter By Blog') ?>
					</button>
					<div class="dropdown-menu">
						<div class="dropdown-item"><a href="?" class="text-white">All Blogs</a></div>
						<?php foreach($Blogs as $Current): ?>
						<div class="dropdown-item" data-blog-id="<?php $Printer($Current->ID) ?>"><a href="?blog=<?php $Printer($Current->ID) ?>" class="text-white"><?php $Printer($Current->Title) ?></a></div>
						<?php endforeach; ?>
					</div>
				</div>
			</div>
			<div class="col-12 font-weight-bold">
				<div>Account Usage: <?php $Printer(Atlantis\Util::BytesReadable($TotalUsage)) ?> of <?php $Printer(Atlantis\Util::BytesReadable($TotalSpace)) ?> (<?php $Printer(round(($TotalUsagePercent+$BlogUsagePercent),1)) ?>%)</div>
				<?php if($Blog): ?>
				<div><?php $Printer($Blog->Title) ?>: <?php $Printer(Atlantis\Util::BytesReadable($BlogUsage)) ?> (<?php $Printer(round($BlogUsagePercent,1)) ?>%)</div>
				<?php endif; ?>
				<div class="progress mt-2">
					<?php if($Blog): ?>
					<div class="progress-bar progress-bar bg-success" style="width:<?php $Printer($BlogUsagePercent) ?>%;"></div>
					<div class="progress-bar progress-bar bg-dark" style="width:<?php $Printer($TotalUsagePercent) ?>%;"></div>
					<?php else: ?>
					<div class="progress-bar progress-bar bg-success" style="width:<?php $Printer($TotalUsagePercent) ?>%;"></div>
					<?php endif; ?>
				</div>
			</div>
		</div>
	</div>

	<div id="Gallery" class="jumbotron jumbotron-secondary p-4 Gallery" data-blog-id="<?php $Printer($Route->Get->Blog) ?>">
		<div class="text-center p-4">
			<i class="fas fa-fw fa-asterisk fa-spin"></i> Loading...
		</div>
	</div>

</div>

<script type="module">
import ElementRow from '/share/atlantis/element/row.js';
import ElementRowItem from '/share/atlantis/element/row-item.js';
import Util from '/share/atlantis/util.js';

class AtlantisImageManager {

	constructor(Opt) {
	/*//
	@date 2020-10-18
	//*/

		this.Container = null;
		this.Page = 1;
		this.Selected = new Array;
		this.BlogID = null;

		NUI.Util.MergeProperties(Opt,this);

		if(typeof this.Container === 'string')
		this.Container = jQuery(this.Container);

		if(this.Conatiner instanceof HTMLElement)
		this.Container = jQuery(this.Container);

		if(!(this.Container instanceof jQuery))
		throw "invalid Container object";

		this.BlogID = parseInt(this.Container.attr('data-blog-id') || null);
		this.LoadPage(this.Page);
		return;
	}

	async LoadPage(Num) {
	/*//
	@date 2020-10-18
	//*/

		let Result = null;

		////////

		this.Page = Num;
		this.ResetPage();

		try { Result = await this.FetchPage(Num); }
		catch(Error) { alert(Error); return; }

		this.ResetPage(this.GeneratePage(Result));

		(this.Container)
		.find('.AtlantisTooltip')
		.tooltip();

		this.UpdateSelectedInfo();

		return;
	}

	FetchPage(Num) {
	/*//
	@date 2020-10-18
	//*/

		let that = this;

		return new Promise(function(Next,Halt){
			Util.Request({
				'Method': 'LIST',
				'URL': '/api/v1/image/entity',
				'Data': {
					'Page': Num,
					'CheckBlogs': true,
					'CheckBlogPosts': true,
					'CheckUser': true,
					'UsedBlogs': that.BlogID
				},
				'OnSuccess': function(Result){
					Next(Result);
					return;
				},
				'OnError': function(Result){
					Halt(Result);
					return;
				}
			});
		});
	}

	ResetPage(Contents) {
	/*//
	@date 2020-10-18
	//*/

		if(Contents === null || typeof Contents === 'undefined')
		Contents = (
			jQuery('<div />')
			.addClass('text-center p-4')
			.append(
				jQuery('<i />')
				.addClass('fas fa-fw fa-asterisk fa-spin')
			)
			.append(
				jQuery('<span />')
				.addClass('ml-1')
				.text('Loading...')
			)
		);

		this.Container
		.empty()
		.append(Contents);

		return;
	}

	GeneratePage(Result) {
	/*//
	@date 2020-10-18
	//*/

		let that = this;
		let Row = null;

		let Toolbar;
		let TbPageCounter;
		let TbGridActions;
		let TbSelectedInfo;
		let TbSelectedActions;
		let TbSpacer;

		TbPageCounter = (
			(new ElementRowItem(['col-auto']))
			.Set(`Page ${Result.Payload.Page} of ${Result.Payload.PageCount}`)
		);

		TbSpacer = (
			new ElementRowItem(['col'])
		);

		TbGridActions = (
			(new ElementRowItem(['col-12','col-md-auto','mt-2','mt-md-0']))
			.Set(
				(new ElementRow(['tight']))
				.Append(
					(new ElementRowItem(['col','col-md-auto']))
					.Set(
						jQuery('<button />')
						.addClass('btn btn-block btn-dark')
						.html('All')
						.on('click',function(){ that.OnSelectAll(); })
					)
				)
				.Append(
					(new ElementRowItem(['col','col-md-auto']))
					.Set(
						jQuery('<button />')
						.addClass('btn btn-block btn-dark')
						.html('None')
						.on('click',function(){ that.OnSelectNone(); })
					)
				)
				.Append(
					(new ElementRowItem(['col col-md-auto']))
					.Set(
						jQuery('<button />')
						.addClass('btn btn-block btn-danger')
						.html('<i class="fa fa-fw fa-trash"></i>')
						.on('click',function(){ that.OnDeleteItems(); })
					)
				)
			)
		);

		TbSelectedInfo = (
			(new ElementRowItem(['col-auto']))
			.Set('<span class="SelectedInfo">0 Selected</span>')
		);

		Toolbar = (
			(new ElementRowItem(['col-12','mb-4']))
			.Set(
				(new ElementRow(['align-items-center']))
				.Append(TbPageCounter)
				.Append(TbSpacer)
				.Append(TbSelectedInfo)
				.Append(TbGridActions)
			)
		);

		Row = (
			(new ElementRow())
			.Append(Toolbar)
		);

		jQuery(Result.Payload.Payload)
		.each(function(){

			let Used = this.UsedBlogPosts || this.UsedBlogs || this.UsedUser;
			let Item = null;
			let Tray1 = null;
			let Tray2 = null;

			Item = (
				jQuery('<div />')
				.addClass('col-6 col-sm-4 col-md-3 col-lg-2 mb-4 GalleryItem')
				.addClass(that.IsSelected(this.ID)?'Selected':'')
				.attr('data-image-id',this.ID)
				.append(
					jQuery('<div />')
					.addClass('WallpaperedBox Square rounded')
					.css('background-image',`url(${this.Sources.Thumbnail})`)
					.append(
						Tray1 = jQuery('<div />')
						.addClass('row tighter TopLeft')
					)
					.append(
						Tray2 = jQuery('<div />')
						.addClass('row tighter BottomRight')
					)
				)
			);

			Tray1.append(
				jQuery('<div />')
				.addClass('col-auto')
				.append(
					jQuery('<span />')
					.addClass('SelectBtn')
					.html('<i class="fas fa-fw fa-square"></i>')
					.on('click',function(){
						that.OnClickItem(jQuery(this).parents('.GalleryItem'));
						return false;
					})
				)
			);

			if(this.UsedUser)
			Tray1.append(
				jQuery('<div />')
				.addClass('col-auto')
				.append('<span class="AtlantisTooltip" title="Used on your user profile."><i class="fas fa-fw fa-user"></i></span>')
			);

			if(this.UsedBlogPosts)
			Tray1.append(
				jQuery('<div />')
				.addClass('col-auto')
				.append('<span class="AtlantisTooltip" title="Used in a blog post."><i class="fas fa-fw fa-file-alt"></i></span>')
			);

			if(this.UsedBlogs)
			Tray1.append(
				jQuery('<div />')
				.addClass('col-auto')
				.append('<span class="AtlantisTooltip" title="Used on a blog."><i class="fas fa-fw fa-blog"></i></span>')
			);

			Tray2.append(
				jQuery('<div />')
				.addClass('col-auto')
				.append(`<span class="font-weight-bold AtlantisTooltip" title="Including auto-generated image sizes.">${this.BytesReadable}</span>`)
			);

			Row.Append(Item);
			return;
		});

		return Row.Get();
	}

	IsSelected(ImageID) {
	/*//
	@date 2020-10-18
	//*/

		return this.Selected.indexOf(ImageID) > -1;
	}

	UpdateSelectedInfo() {
	/*//
	@date 2020-10-18
	//*/

		this.Container.find('.SelectedInfo')
		.text(`${this.Selected.length} Selected`)

		return;
	}

	////////////////////////////////
	////////////////////////////////

	OnClickItem(Item) {
	/*//
	@date 2020-10-18
	//*/

		let ImageID = Item.attr('data-image-id');

		if(this.IsSelected(ImageID))
		this.OnDeselectItem(ImageID,Item);

		else
		this.OnSelectItem(ImageID,Item);

		return;
	}

	OnSelectItem(ImageID,Item) {
	/*//
	@date 2020-10-18
	//*/

		this.Selected.push(ImageID);
		Item.addClass('Selected');

		(Item.find('.SelectBtn'))
		.trigger('blur')
		.find('i')
		.addClass('fa-check-square')
		.removeClass('fa-square');

		this.UpdateSelectedInfo();
		return;
	}

	OnDeselectItem(ImageID,Item) {
	/*//
	@date 2020-10-18
	//*/

		this.Selected = Atlantis.FilterArrayStrip(
			this.Selected,
			ImageID
		);

		Item.removeClass('Selected');

		(Item.find('.SelectBtn'))
		.trigger('blur')
		.find('i')
		.addClass('fa-square')
		.removeClass('fa-check-square');

		this.UpdateSelectedInfo();
		return;
	}

	OnDeleteItems() {
	/*//
	@date 2020-10-18
	//*/

		let that = this;

		if(this.Selected.length === 0)
		return;

		if(confirm(`Really delete ${this.Selected.length} items? This cannot be undone.`)) {
			that.ResetPage();
			Util.Request({
				'Method': 'DELETE',
				'URL': '/api/v1/image/entity',
				'Data': { 'ID': this.Selected },
				'OnSuccess': function() {
					that.Selected.length = 0;
					that.LoadPage(that.Page);
					return;
				}
			});
		}

		return;
	}

	OnSelectAll() {
	/*//
	@date 2020-10-21
	//*/

		(this.Container)
		.find('.GalleryItem:not(.Selected)')
		.each(function(){

			(jQuery(this).find('.SelectBtn'))
			.trigger('click');

			return;
		});

		return;
	}

	OnSelectNone() {
	/*//
	@date 2020-10-21
	//*/

		(this.Container)
		.find('.GalleryItem.Selected')
		.each(function(){

			(jQuery(this).find('.SelectBtn'))
			.trigger('click');

			return;
		});

		return;
	}

}

jQuery(document)
.ready(function(){

	let Manager = new AtlantisImageManager({
		'Container': '#Gallery'
	});

	return;
});
</script>
