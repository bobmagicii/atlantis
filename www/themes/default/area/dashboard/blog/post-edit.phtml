<?php

/**
 * @var Atlantis\Prototype\BlogPost $Post
 * @var Atlantis\Prototype\Blog $Blog
 * @var Atlantis\Struct\SearchResult $Tags
 */

$OptAdultClass = '';
$OptDraftClass = '';

if($Post->OptAdult !== Atlantis\Prototype\Blog::AdultDisabled)
$OptAdultClass .= 'active ';

if($Post->OptAdult === Atlantis\Prototype\Blog::AdultForced)
$OptAdultClass .= 'disabled ';

if($Post->Enabled === 0)
$OptDraftClass = 'active ';

?>

<?php $Surface->Area('dashboard/promo') ?>

<div id="PostData" class="d-none" data-blog-id="<?php $Printer($Post->Blog->ID) ?>" data-post-id="<?php $Printer($Post->ID) ?>"></div>

<div class="container pb-4">
	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a href="<?php echo $Endpoint('Atlantis.Dashboard.Home') ?>">Dashboard</a></li>
		<li class="breadcrumb-item">Blog</li>
		<li class="breadcrumb-item active">New Post</li>
	</ol>

	<div class="mb-4" style="position:relative;">
		<button disabled type="button" class="btn btn-block btn-lg btn-secondary pl-2 d-flex align-items-center">
			<div class="flex-grow-0 mr-4">
				<div id="SelectedBlogIcon" class="WallpaperedBox Square rounded" style="border:1px solid #444;width:64px;background-color:transparent;background-image:url(<?php $Printer($Blog->ImageIconURL) ?>);"></div>
			</div>
			<div id="SelectedBlogTitle" class="flex-grow-0 text-nowrap text-left text-truncate">
				<div><?php echo $Printer($Blog->Title) ?></div>
				<div class="font-weight-light font-size-smaller"><?php echo $Printer($Blog->Tagline) ?></div>
			</div>
			<div class="flex-grow-1"></div>
		</button>
	</div>

	<div class="mb-4">
		<input id="InputTitle" type="text" class="form-control form-control-lg" placeholder="Post Title..." value="<?php $Printer($Post->Title) ?>" />
	</div>

	<div class="jumbotron jumbotron-tertiary p-4 mb-4">
		<div id="EditorJS">
			<div class="Throbber">
				<div class="row justify-content-center">
					<div class="col-auto">
						<i class="fas fa-fw fa-asterisk fa-spin"></i> Loading Editor...
					</div>
				</div>
			</div>
			<div class="Editor"></div>
		</div>
	</div>

	<div class="mb-4">
		<h2 class="font-size-large font-weight-bold">Post Tags</h2>
		<hr class="mb-2 mt-1" />
		<div id="ElementTagList" class="row tight align-items-center">
			<?php foreach($Tags->Payload as $PostTag): ?>
			<div class="col-auto">
				<button class="btn btn-secondary btn-sm pt-0 pb-0 pl-2 pr-2 CmdTagRemove" data-tag-id="<?php echo $PostTag->Tag->ID ?>">
					<i class="fas fa-fw fa-times"></i>
					<?php $Printer($PostTag->Tag->Title) ?>
				</button>
			</div>
			<?php endforeach; ?>
			<div class="col-auto">
				<button class="btn btn-dark btn-sm pt-0 pb-0 pl-2 pr-2 CmdTagAdd">
					<i class="fas fa-fw fa-plus"></i>
				</button>
			</div>
		</div>
	</div>


	<div class="mb-4">
		<h2 class="font-size-large font-weight-bold">Post Settings</h2>
		<hr class="mb-2 mt-1" />
		<div class="row tight align-items-center">
			<div class="col-12 col-md-auto">
				<button id="ElementOptDraft" class="btn btn-dark btn-block btn-toggle <?php $Printer(trim($OptDraftClass)) ?>">
					<i class="btn-toggle-off far fa-square mr-2"></i>
					<i class="btn-toggle-on far fa-check-square mr-2"></i>
					Draft
				</button>
			</div>
			<div class="col-12 col-md-auto">
				<button id="ElementOptAdult" class="btn btn-adult btn-block btn-toggle <?php $Printer(trim($OptAdultClass)) ?>">
					<i class="btn-toggle-off far fa-square mr-2"></i>
					<i class="btn-toggle-on far fa-check-square mr-2"></i>
					Adult
				</button>
			</div>
		</div>
	</div>

	<div class="text-center mb-4">
		<input id="InputPostID" type="hidden" value="<?php echo $Post->ID ?>" />
		<button id="CmdSubmit" type="button" class="btn btn-lg btn-dark">Save Changes</button>
	</div>

</div>

<script type="text/javascript">
jQuery(document)
.ready(function(){

	let PostData = jQuery('#PostData');
	let BlogID = PostData.attr('data-blog-id');
	let PostID = PostData.attr('data-post-id');

	let URL = new URI;
	let Query = URL.query(true);
	let InputPostID = jQuery('#InputPostID');
	let InputTitle = jQuery('#InputTitle');
	let ElementContain = jQuery('#EditorContainer');
	let ElementOptAdult = jQuery('#ElementOptAdult');
	let ElementOptDraft = jQuery('#ElementOptDraft');
	let ElementSubmit = jQuery('#CmdSubmit');
	let ElementTagList = jQuery('#ElementTagList');

	////////////////////////////////////////////////////////////////
	// code block management ///////////////////////////////////////

	let InsertCodeBlockDef = {
		'name': 'Insert Code Block',
		'iconURL': '/themes/default/gfx/icon-tiny.png',
		'exec': function(Ed) {
			(Ed.selection)
			.insertHTML('<code class="CodeViewer" data-lang="null" spellcheck="false"></code>&nbsp;');
			return;
		}
	};


	let InsertTT = {
		'name': 'Insert TT',
		'iconURL': '/themes/default/gfx/icon-tiny.png',
		'exec': function(Ed) {
			(Ed.selection).wrapInTag('tt');
			return;
		}
	};

	let OnCodeConfig = function(ElementCode){

		let Overlay;
		let Dialog;
		let ElementLang = jQuery('<select />').addClass('form-control');
		let CurrentLang = ElementCode.attr('data-lang');
		let ListLang = CodeMirror.modeInfo.slice(0);

		ListLang.sort(function(A,B){
			let AName = A.name.toLowerCase();
			let BName = B.name.toLowerCase();

			return (
				(AName === BName)?
				(0):((AName < BName)?(-1):(1))
			);
		});

		jQuery.each(ListLang,function(Key,Val){
			ElementLang
			.append(
				jQuery('<option />')
				.attr('value',Val.mode)
				.text(Val.name)
			);
			return;
		});

		ElementLang
		.val(CurrentLang)
		.on('change',function(){
			ElementCode.attr(
				'data-lang',
				jQuery(this).val()
			);
			return;
		});

		Overlay = new NUI.Overlay({
			'Content': (Dialog = new NUI.Dialog({
				'Title': 'Code Block Config',
				'Content': (
					jQuery('<div />')
					.addClass('row')
					.append(
						jQuery('<div />')
						.addClass('col-12 mb-2')
						.append(ElementLang)
					)
				),
				'OnCancel': function(){
					Overlay.Destroy();
					return;
				}
			}))
		});

		return;
	};

	ElementContain
	.on('dblclick','.CodeViewer',function(){
		OnCodeConfig(jQuery(this));
		return;
	});

	////////////////////////////////////////////////////////////////
	// tag management //////////////////////////////////////////////

	let OnTagRemove = function(Tag){

		let TagID = Tag.attr('data-tag-id');

		(Tag.parent())
		.remove();

		Atlantis.Request({
			'Method': 'TAGDELETE',
			'URL': '/api/v1/post/entity',
			'Data': { 'ID':PostID, 'TagID':TagID },
			'OnSuccess': function(){ return; }
		});

		return;
	};

	let OnTagAdd = function() {

		let Overlay;
		let Dialog;
		let InputText;

		Overlay = new NUI.Overlay({
			'Content': (Dialog = new NUI.Dialog({
				'Title': 'Add Tags',
				'Content': (
					jQuery('<div />')
					.addClass('row')
					.append(
						jQuery('<div />')
						.addClass('col-12 mb-2')
						.append(
							InputText = jQuery('<input />')
							.attr('type','text')
							.addClass('form-control')
						)
					)
				),
				'Buttons': [
					new NUI.Button({'Label':'Add','Class':'NUI-Dialog-Accept btn btn-primary'}),
					new NUI.Button({'Label':'Cancel','Class':'NUI-Dialog-Cancel btn btn-dark'}),
				],
				'OnAccept': function(){

					Atlantis.Request({
						'Method': 'TAGPOST',
						'URL': '/api/v1/post/entity',
						'Data': { 'ID':PostID, 'TagTitle':InputText.val() },
						'OnSuccess': function(Result) {
							Overlay.Destroy();

							jQuery(Result.Payload)
							.each(function(){

								ElementTagList
								.find('button[data-tag-id=' + this.TagID + ']')
								.parent()
								.remove();

								ElementTagList
								.find('.CmdTagAdd')
								.parent()
								.before(
									jQuery('<div />')
									.addClass('col-auto')
									.append(
										jQuery('<button />')
										.addClass('btn btn-secondary btn-sm pt-0 pb-0 pl-2 pr-2 CmdTagRemove')
										.attr('data-tag-id',this.TagID)
										.html('<i class="fas fa-fw fa-times"></i> ' + this.TagTitle)
									)
								);

								return;
							});

							return;
						}
					});

					return;
				},
				'OnCancel': function(){
					Overlay.Destroy();
					return;
				}
			}))
		});

		return;
	};

	ElementTagList
	.on('click','.CmdTagAdd',function(){
		OnTagAdd();
		return;
	});

	ElementTagList
	.on('click','.CmdTagRemove',function(){
		OnTagRemove(jQuery(this));
		return;
	});

	////////////////////////////////////////////////////////////////
	// launch editor ///////////////////////////////////////////////


	let Editor = new Atlantis.Editor.EditorJS({
		'Selector': '#EditorJS',
		'Data': <?php echo $Post->ContentJSON ?>
	});

	ElementSubmit
	.on('click',function(){

		(async function(){
			let PostID = parseInt(InputPostID.val());
			let Title = jQuery.trim(InputTitle.val());
			let OptAdult = ElementOptAdult.hasClass('active') ? 1 : 0;
			let OptDraft = ElementOptDraft.hasClass('active') ? 1 : 0;
			let Content = await Editor.GetContent();

			Atlantis.Request({
				'Method': 'PATCH',
				'URL': '<?php echo $Endpoint('Atlantis.API.Post',['Command'=>'entity']) ?>',
				'Data': {
					'ID': PostID,
					'Title': Title,
					'ContentJSON': JSON.stringify(Content),
					'OptDraft': OptDraft,
					'OptAdult': OptAdult
				},
				'OnSuccess': function(Result){
					location.href = Result.Location;
					return;
				}
			});

			return;
		})();

		return false;
	});

	return;
});
</script>
