<?php

/**
 * @var Atlantis\Prototype\BlogPost $Post
 * @var Atlantis\Prototype\Blog $Blog
 */

$OptAdultClass = '';
$OptDraftClass = '';

if($Post->OptAdult !== Atlantis\Prototype\Blog::AdultDisabled)
$OptAdultClass .= 'active ';

if($Post->OptAdult === Atlantis\Prototype\Blog::AdultForced)
$OptAdultClass .= 'disabled ';

if($Post->Enabled === 0)
$OptDraftClass = 'active ';

?>

<?php $Surface->Area('dashboard/promo') ?>


<div class="container">
	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a href="<?php echo $Endpoint('Atlantis.Dashboard.Home') ?>">Dashboard</a></li>
		<li class="breadcrumb-item">Blog</li>
		<li class="breadcrumb-item active">New Post</li>
	</ol>

	<div class="mb-4" style="position:relative;">
		<button disabled type="button" class="btn btn-block btn-lg btn-secondary pl-2 d-flex align-items-center">
			<div class="flex-grow-0 mr-4">
				<div id="SelectedBlogIcon" class="WallpaperedBox Square rounded" style="border:1px solid #444;width:64px;background-color:transparent;background-image:url(<?php $Printer($Blog->ImageIconURL) ?>);"></div>
			</div>
			<div id="SelectedBlogTitle" class="flex-grow-0 text-nowrap text-left text-truncate">
				<div><?php echo $Printer($Blog->Title) ?></div>
				<div class="font-weight-light font-size-smaller"><?php echo $Printer($Blog->Tagline) ?></div>
			</div>
			<div class="flex-grow-1"></div>
		</button>
	</div>

	<div class="mb-4">
		<input id="InputTitle" type="text" class="form-control form-control-lg" placeholder="Post Title..." value="<?php $Printer($Post->Title) ?>" />
	</div>

	<div id="EditorContainer" class="EditorContainer mb-4">
		<div id="Editor"></div>
		<div id="EditorContent" class="d-none"><?php echo $Post->Content ?></div>
	</div>

	<div class="mb-4">
		<h2 class="font-size-large font-weight-bold">Post Settings</h2>
		<div class="row tight align-items-center">
			<div class="col-12 col-md-auto">
				<button id="ElementOptDraft" class="btn btn-dark btn-block btn-toggle <?php $Printer(trim($OptDraftClass)) ?>">
					<i class="btn-toggle-off far fa-square mr-2"></i>
					<i class="btn-toggle-on far fa-check-square mr-2"></i>
					Draft
				</button>
			</div>
			<div class="col-12 col-md-auto">
				<button id="ElementOptAdult" class="btn btn-adult btn-block btn-toggle <?php $Printer(trim($OptAdultClass)) ?>">
					<i class="btn-toggle-off far fa-square mr-2"></i>
					<i class="btn-toggle-on far fa-check-square mr-2"></i>
					Adult
				</button>
			</div>
		</div>
	</div>

	<div class="text-center mb-4">
		<input id="InputPostID" type="hidden" value="<?php echo $Post->ID ?>" />
		<button id="CmdSubmit" type="button" class="btn btn-lg btn-dark">Save Changes</button>
	</div>

</div>

<script type="text/javascript">
jQuery(document)
.ready(function(){

	let URL = new URI;
	let Query = URL.query(true);
	let InputPostID = jQuery('#InputPostID');
	let InputTitle = jQuery('#InputTitle');
	let ElementContain = jQuery('#EditorContainer');
	let ElementOptAdult = jQuery('#ElementOptAdult');
	let ElementOptDraft = jQuery('#ElementOptDraft');
	let ElementSubmit = jQuery('#CmdSubmit');

	////////

	let InsertCodeBlockDef = {
		name: 'Insert Code Block',
		iconURL: './build/images/icons/269-info.png',
		exec: function(me) {
			me.selection.insertHTML('<code class="CodeViewer" data-lang="null" spellcheck="false"></code>');
			return;
		}
	};

	let OnCodeConfig = function(ElementCode){

		let Overlay;
		let Dialog;
		let ElementLang = jQuery('<select />').addClass('form-control');
		let CurrentLang = ElementCode.attr('data-lang');
		let ListLang = CodeMirror.modeInfo.slice(0);

		ListLang.sort(function(A,B){
			let AName = A.name.toLowerCase();
			let BName = B.name.toLowerCase();

			return (
				(AName === BName)?
				(0):((AName < BName)?(-1):(1))
			);
		});

		jQuery.each(ListLang,function(Key,Val){
			ElementLang
			.append(
				jQuery('<option />')
				.attr('value',Val.mode)
				.text(Val.name)
			);
			return;
		});

		ElementLang
		.val(CurrentLang)
		.on('change',function(){
			ElementCode.attr(
				'data-lang',
				jQuery(this).val()
			);
			return;
		});

		Overlay = new NUI.Overlay({
			'Content': (Dialog = new NUI.Dialog({
				'Title': 'Code Block Config',
				'Content': (
					jQuery('<div />')
					.addClass('row')
					.append(
						jQuery('<div />')
						.addClass('col-12 mb-2')
						.append(ElementLang)
					)
				),
				'OnCancel': function(){
					Overlay.Destroy();
					return;
				}
			}))
		});

		return;
	};

	////////

	let Editor = new Jodit('#Editor',{
		'autofocus': false,
		'defaultActionOnPaste': 'insert_as_text',
		'enableDragAndDropFileToEditor': true,
		'extraButtons':[
			InsertCodeBlockDef
		],
		'uploader': {
			'method': 'POST',
			'url': '/api/v1/image/entity',
			'format': 'json',
			'filesVariableName': function(Iter) { return 'File' + Iter; },
			'prepareData': function(Data) { return Data; },
			'getMessage': function (Result) { return Result.Message; },
			'error': function (e) {
				this.jodit.events.fire('errorMessage', e.message, 'error', 4000);
				return;
			},
			'isSuccess': function(Result) { return Result.Error === 0; },
			'process': function(Result) {
				let Output = [];

				jQuery(Result.Payload.Success)
				.each(function(){
					console.log('Process: ' + this.URL);
					Output.push(this.URL);
					return;
				});

				return {
					files: Output
				};
			},
			'defaultHandlerSuccess': function (Data) {
				let that = this;

				jQuery.each(Data.files,function(Key,Val){
					that.selection.insertImage(Val);
					return;
				});

				return;
			},
			'defaultHandlerError': function (Result) {
				console.log("Error Handler");

				(this.jodit.events)
				.fire('errorMessage',Result.Message);

				return;
			}
		}
	});

	Editor.value = jQuery('#EditorContent').html();

	////////

	ElementSubmit
	.on('click',function(){

		let PostID = parseInt(InputPostID.val());
		let Title = jQuery.trim(InputTitle.val());
		let OptAdult = ElementOptAdult.hasClass('active') ? 1 : 0;
		let OptDraft = ElementOptDraft.hasClass('active') ? 1 : 0;
		let Content = null;

		jQuery('.jodit_wysiwyg')
		.find('.CodeConfig')
		.remove();

		Content = Editor.value;

		Atlantis.Request({
			'Method': 'PATCH',
			'URL': '<?php echo $Endpoint('Atlantis.API.Post',['Command'=>'entity']) ?>',
			'Data': {
				'ID': PostID,
				'Title': Title,
				'Content': Content,
				'OptDraft': OptDraft,
				'OptAdult': OptAdult
			},
			'OnSuccess': function(Result){
				location.href = Result.Location;
				return;
			}
		});

		return;
	});

	ElementContain
	.on('mouseenter','.CodeViewer',function(){
		let that = jQuery(this);
		let Lang = that.attr('data-lang') || 'text';
		let ElementLang;

		that
		.find('.CodeConfig')
		.remove();

		that
		.css({ 'position':'relative', 'overflow':'visible' })
		.append(
			jQuery('<div />')
			.addClass('CodeConfig p-2')
			.css({ 'position':'absolute', 'top':'0px', 'right':'0px' })
			.append(
				ElementLang = jQuery('<button />')
				.addClass('btn btn-sm btn-dark')
				.html('<i class="fa fa-code"></i>')
				.on('click',function(){ OnCodeConfig(that); })
			)
		);

		return;
	});

	ElementContain
	.on('mouseleave','.CodeViewer',function(){

		// remove the little option panel.

		jQuery(this)
		.find('.CodeConfig')
		.remove();

		// if you are directly typing code into the editor they insert line breaks
		// so when we leave, we convert them to real breaks.

		jQuery('.CodeViewer')
		.each(function(){
			let Text = jQuery(this)
			.html()
			.replace(/<br ?\/?>/i,"\n");

			jQuery(this).html(Text);
			return;
		});

		return;
	});

	////////


	return;
});
</script>
