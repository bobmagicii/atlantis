<?php

/**
 * @var Atlantis\Struct\SearchResult $Blogs
 * @var Atlantis\Prototype\Blog $Blog
 */

?>

<?php $Surface->Area('dashboard/promo') ?>


<div class="container pb-4">
	<ol class="breadcrumb mb-4">
		<li class="breadcrumb-item"><a href="<?php echo $Endpoint('Atlantis.Dashboard.Home') ?>">Dashboard</a></li>
		<li class="breadcrumb-item">Blog</li>
		<li class="breadcrumb-item active">New Post</li>
	</ol>

	<div class="mb-4" style="position:relative;">
		<button type="button" class="btn btn-block btn-lg btn-secondary pl-2 d-flex align-items-center dropdown-toggle" data-toggle="dropdown">
			<div class="flex-grow-0 mr-4">
				<div id="SelectedBlogIcon" class="WallpaperedBox Square rounded" style="border:1px solid #444;width:64px;background-image:url(<?php echo Nether\Option::Get('Atlantis.Blog.DefaultImageIconURL') ?>);"></div>
			</div>
			<div id="SelectedBlogTitle" class="flex-grow-0 text-nowrap text-truncate">Select Blog...</div>
			<div class="flex-grow-1"></div>
		</button>
		<div class="dropdown-menu w-100 BlogSelectMenu" style="max-height:50vh;overflow-y:scroll;">
			<?php foreach($Blogs as $Blog): ?>
			<div id="BlogSelectItem-<?php $Printer($Blog->ID) ?>" class="row align-items-center BlogSelectItem" data-blog-id="<?php $Printer($Blog->ID) ?>" data-blog-title="<?php echo htmlentities($Blog->Title) ?>" data-blog-icon="<?php $Printer($Blog->ImageIconURL) ?>" data-blog-optadult="<?php $Printer($Blog->OptAdult) ?>">
				<div class="col-1">
					<div class="WallpaperedBox Square" style="background-image:url(<?php $Printer($Blog->ImageIconURL) ?>);"></div>
				</div>
				<div class="col">
					<div class="font-size-large font-weight-bold"><?php $Printer($Blog->Title) ?></div>
					<div><?php $Printer($Blog->Tagline) ?></div>
				</div>
			</div>
			<?php endforeach; ?>
		</div>
	</div>

	<div class="mb-4">
		<input id="InputTitle" type="text" class="form-control form-control-lg" placeholder="Post Title..." />
	</div>

	<div id="EditorJS">
		<div class="Throbber">
			<div class="row justify-content-center">
				<div class="col-auto">
					<i class="fas fa-fw fa-asterisk fa-spin"></i> Loading Editor...
				</div>
			</div>
		</div>
		<div class="Editor"></div>
	</div>

	<div class="mb-4">
		<h2 class="font-size-large font-weight-bold">Post Tags</h2>
		<hr class="mb-2 mt-1" />
		<div id="ElementTagList" class="row tight align-items-center">
			<div class="col-auto">
				<button class="btn btn-dark btn-sm pt-0 pb-0 pl-2 pr-2 CmdTagAdd">
					<i class="fas fa-fw fa-plus"></i>
				</button>
			</div>
		</div>
	</div>

	<div class="mb-4">
		<h2 class="font-size-large font-weight-bold">Post Settings</h2>
		<hr class="mb-2 mt-1" />
		<div class="row tight align-items-center">
			<div class="col-12 col-md-auto mb-2 mb-md-0">
				<label class="AtlantisCheckboxButton" data-btn-class="btn-dark btn-block">
					<input id="InputOptDraft" type="checkbox" />
					Draft
				</label>
			</div>
			<div class="col-12 col-md-auto mb-2 mb-md-0">
				<label class="AtlantisCheckboxButton" data-btn-class="btn-adult btn-block">
					<input id="InputOptAdult" type="checkbox" />
					Adult
				</label>
			</div>
		</div>
	</div>

	<div class="text-center mb-4">
		<input id="InputBlogID" type="hidden" value="0" />
		<button id="CmdSubmit" type="button" class="btn btn-lg btn-dark">Post</button>
	</div>

</div>

<script type="module">
import PostEditor from '/share/atlantis/element/editor.js';
import Util from '/share/atlantis/util.js';

jQuery(document)
.ready(function(){

	let URL = new URI;
	let Query = URL.query(true);
	let InputBlogID = jQuery('#InputBlogID');
	let InputTitle = jQuery('#InputTitle');
	let InputOptDraft = jQuery('#InputOptDraft');
	let InputOptAdult = jQuery('#InputOptAdult');
	let ElementContain = jQuery('#EditorContainer');
	let ElementBlogIcon = jQuery('#SelectedBlogIcon');
	let ElementBlogTitle = jQuery('#SelectedBlogTitle');
	let ElementSubmit = jQuery('#CmdSubmit');
	let ElementTagList = jQuery('#ElementTagList');

	////////////////////////////////////////////////////////////////
	// blog selector ///////////////////////////////////////////////

	jQuery('.BlogSelectItem')
	.on('click',function(){
		let BlogID = jQuery(this).attr('data-blog-id');
		let BlogTitle = jQuery(this).attr('data-blog-title');
		let BlogIcon = jQuery(this).attr('data-blog-icon');
		let BlogAdult = parseInt(jQuery(this).attr('data-blog-optadult'));

		InputBlogID.val(BlogID);
		ElementBlogIcon.css('background-image','url(' + BlogIcon + ')');
		ElementBlogTitle.text(BlogTitle);

		if(BlogAdult === 0)
		InputOptAdult.prop('checked',false);
		else if(BlogAdult === 1)
		InputOptAdult.prop('checked',true);

		InputOptAdult.trigger('change');
		ElementTagList.find('.CmdTagRemove').empty();
		return;
	});

	if(URL.hasQuery('blog'))
	jQuery('#BlogSelectItem-' + Query.blog)
	.trigger('click');

	////////////////////////////////////////////////////////////////
	// tag management //////////////////////////////////////////////

	let OnTagRemove = function(Tag){

		let TagID = Tag.attr('data-tag-id');

		(Tag.parent())
		.remove();

		return;
	};

	let OnTagAdd = function() {

		let Overlay;
		let Dialog;
		let InputText;

		Overlay = new NUI.Overlay({
			'Content': (Dialog = new NUI.Dialog({
				'Title': 'Add Tags',
				'Content': (
					jQuery('<div />')
					.addClass('row')
					.append(
						jQuery('<div />')
						.addClass('col-12 mb-2')
						.append(
							InputText = jQuery('<input />')
							.attr('type','text')
							.addClass('form-control')
						)
					)
				),
				'Buttons': [
					new NUI.Button({'Label':'Add','Class':'NUI-Dialog-Accept btn btn-primary'}),
					new NUI.Button({'Label':'Cancel','Class':'NUI-Dialog-Cancel btn btn-dark'}),
				],
				'OnAccept': function(){

					Util.Request({
						'Method': 'POST',
						'URL': '/api/v1/blog/tag',
						'Data': { 'ID':InputBlogID.val(), 'TagTitle':InputText.val() },
						'OnSuccess': function(Result) {
							Overlay.Destroy();

							jQuery(Result.Payload)
							.each(function(){

								ElementTagList
								.find('button[data-tag-id=' + this.TagID + ']')
								.parent()
								.remove();

								ElementTagList
								.find('.CmdTagAdd')
								.parent()
								.before(
									jQuery('<div />')
									.addClass('col-auto')
									.append(
										jQuery('<button />')
										.addClass('btn btn-secondary btn-sm pt-0 pb-0 pl-2 pr-2 CmdTagRemove')
										.attr('data-tag-id',this.TagID)
										.html('<i class="fas fa-fw fa-times"></i> ' + this.TagTitle)
									)
								);

								return;
							});

							return;
						}
					});

					return;
				},
				'OnCancel': function(){
					Overlay.Destroy();
					return;
				}
			}))
		});

		return;
	};

	let GetTagList = function() {

		let Output = new Array;

		ElementTagList
		.find('.CmdTagRemove')
		.each(function(){
			Output.push(jQuery(this).attr('data-tag-id'));
			return;
		});

		return Output;
	}

	ElementTagList
	.on('click','.CmdTagAdd',function(){
		OnTagAdd();
		return;
	});

	ElementTagList
	.on('click','.CmdTagRemove',function(){
		OnTagRemove(jQuery(this));
		return;
	});

	////////////////////////////////////////////////////////////////
	// launch editor ///////////////////////////////////////////////

	let Editor = new PostEditor({
		'Selector': '#EditorJS'
	});

	ElementSubmit
	.on('click',function(){

		(async function(){
			let BlogID = parseInt(InputBlogID.val());
			let Title = jQuery.trim(InputTitle.val());
			let OptAdult = InputOptAdult.is(':checked') ? 1 : 0;
			let OptDraft = InputOptDraft.is(':checked') ? 1 : 0;
			let Tags = GetTagList();
			let Content = await Editor.GetContent();

			Util.Request({
				'Method': 'POST',
				'URL': '/api/v1/post/entity',
				'Data': {
					'BlogID': BlogID,
					'Title': Title,
					'ContentJSON': JSON.stringify(Content),
					'Tags': Tags,
					'OptAdult': OptAdult,
					'OptDraft': OptDraft
				},
				'OnSuccess': function(Result){
					location.href = Result.Location;
					return;
				}
			});

			return;
		})();

		return false;
	});

	return;
});
</script>
