<?php

?>

<?php $Surface->Area('dashboard/promo') ?>

<div class="container">
	<ol class="breadcrumb mb-6">
		<li class="breadcrumb-item"><a href="<?php echo Atlantis\Site\Endpoint::Get('Atlantis.Dashboard.Home') ?>">Dashboard</a></li>
		<li class="breadcrumb-item">Blog</li>
		<li class="breadcrumb-item active">Create New Blog</li>
	</ol>

	<h2 class="font-size-large font-weight-bold">Blog Title</h2>
	<div class="form-text mb-2">Give your blog a clever name that will relate the type of content you intend to post.</div>
	<div class="form-group mb-1">
		<input autocomplete="off" id="Title" type="text" class="form-control text-size-large " placeholder="..." />
	</div>
	<div id="ErrorTitle" class="ErrorZone mb-4"></div>

	<h2 class="font-size-large font-weight-bold">Blog URL</h2>
	<div class="form-text mb-2">This is the link your blog will have. It is auto generated from your blog title, but you can customize it if you wish.</div>
	<div class="form-group row tight align-items-center mb-4">
		<div class="col-auto mb-1 text-size-large font-family-code">
			<?php echo $Router->GetDomain() ?>
		</div>
		<div class="col-auto mb-1 text-size-large font-family-code">
			/
		</div>
		<div class="col-auto mb-1 text-size-large font-family-code">
			+
		</div>
		<div class="col mb-1">
			<input autocomplete="off" id="Alias" type="text" class="text-size-large form-control-plaintext font-family-code" placeholder="..." readonly />
		</div>
		<div class="col-12 col-md-auto">
			<button id="CmdAlias" class="btn btn-block btn-secondary">Customize Link</button>
		</div>
		<div id="ErrorAlias" class="col-12 mt-1 ErrorZone"></div>
	</div>

	<div class="text-center">
		<button id="CmdCreate" class="btn btn-dark btn-lg text-uppercase">Create</button>
	</div>
</div>

<script type="text/javascript">

jQuery(document)
.ready(function(){

	let Mode = 1;
	let TimerAlias = null;
	let InputTitle = jQuery('#Title');
	let InputAlias = jQuery('#Alias');
	let CmdAlias = jQuery('#CmdAlias');
	let CmdCreate = jQuery('#CmdCreate');
	let ErrorTitle = jQuery('#ErrorTitle');
	let ErrorAlias = jQuery('#ErrorAlias');

	let EmulateServerSideAlias = function(Input) {
		// emulate how the server will transform it so we
		// can show what it will be without asking what it
		// will be every time.

		return jQuery.trim((Input)
		.toLowerCase()
		.replace(/[^a-z0-9\x20\-]/g,'')
		.replace(/ /g,'-')
		.replace(/-{2,}/g,'-')
		.substr(0,64));
	};

	let TriggerAliasCheck = function(){
		if(TimerAlias)
		clearTimeout(TimerAlias);

		TimerAlias = setTimeout(CheckAliasExists,300);
		return;
	};

	let CheckAliasExists = function(){

		Atlantis.Request({
			'Method': 'GET',
			'URL': '<?php echo $Endpoint('Atlantis.API.Blog',['Command'=>'entity']) ?>',
			'Data': { 'Alias': EmulateServerSideAlias(InputAlias.val()) },
			'OnSuccess': function(Result){
				// in this case, a success is always a failure.
				HandleAliasExists();
				return;
			},
			'OnError': function(Result){
				// in this case, an error might be a success.
				if(Result.Error === 1) {
					ErrorAlias.empty();
				}
				return;
			}
		});

		return;
	};

	let HandleAliasExists = function() {

		InputAlias.addClass('is-invalid');

		ErrorAlias
		.empty()
		.append(
			jQuery('<div />')
			.addClass('alert alert-danger')
			.text('A blog with this URL already exists. Please choose another by clicking the Customize Link button.')
		);

		return;
	};

	let HandleTitleLength = function() {

		InputAlias.addClass('is-invalid');

		ErrorTitle
		.empty()
		.append(
			jQuery('<div />')
			.addClass('alert alert-danger')
			.text('Your blog needs to have a title.')
		);

		return;
	};

	let HandleAliasLength = function() {

		InputAlias.addClass('is-invalid');

		ErrorAlias
		.empty()
		.append(
			jQuery('<div />')
			.addClass('alert alert-danger')
			.text('Your blog needs to have a link alias.')
		);

		return;
	};

	let HandleBlogCreate = function(Title,Alias) {

		Atlantis.Request({
			'Method': 'POST',
			'URL': '<?php echo $Endpoint('Atlantis.API.Blog',['Command'=>'entity']) ?>',
			'Data': { 'Title': Title, 'Alias': Alias },
			'OnSuccess': function(Result){

				location.href = Result.Location;
				return;
			},
			'OnError': function(Result) {

				switch(Result.Error) {
					case 1: return HandleTitleLength();
					case 2: return HandleAliasLength();
					case 3: return HandleAliasExists();
				}

				alert(Result.Error + ': ' + Result.Message);
				return;
			}
		});

		return;
	};

	jQuery('#Title')
	.on('keyup',function(){
		let Title = jQuery(this).val();
		let Alias = Title;

		jQuery(this)
		.removeClass('is-invalid');

		if(Mode === 1) {
			jQuery('#Alias')
			.removeClass('is-invalid')
			.val(EmulateServerSideAlias(Alias));

			TriggerAliasCheck();
			return;
		}

		return;
	});

	jQuery('#Alias')
	.on('keyup',function(){
		let Alias = jQuery(this).val();

		jQuery(this)
		.removeClass('is-invalid');

		if(Mode === 0) {
			jQuery('#Alias')
			.val(EmulateServerSideAlias(Alias));

			TriggerAliasCheck();
			return;
		}

		return;
	});

	jQuery('#CmdAlias')
	.on('click',function(){

		if(Mode === 1) {
			jQuery('#Alias')
			.removeAttr('readonly')
			.addClass('form-control')
			.removeClass('form-control-plaintext');

			Mode = 0;
		}

		else {
			jQuery('#Alias')
			.attr('readonly',true)
			.addClass('form-control-plaintext')
			.removeClass('form-control');

			Mode = 1;

			jQuery('#Title')
			.trigger('keyup');
		}

		return;
	});

	jQuery('#CmdCreate')
	.on('click',function(){

		let Title = jQuery.trim(InputTitle.val());
		let Alias = jQuery.trim(InputAlias.val());
		jQuery('.ErrorZone').empty();

		HandleBlogCreate(Title,Alias);
		return;
	});

	return;
});
</script>
