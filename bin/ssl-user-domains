#!/usr/bin/env php
<?php

require(sprintf(
	'%s/conf/start.php',
	dirname(__FILE__,2)
));

(new class extends Nether\Console\Client {

	public function
	HandleHelp():
	Int {

		$this::Messages(
			'',
			'USAGE: ssl-user-domains <command> <options>',
			'',
			'    update <options>',
			'    processes all the configured domain acmephp files and runs through them to keep the ssl certs up to date.',
			'',
			'      --list',
			'      print out a list of the config files beforehand.',
			''
		);

		return 0;
	}

	public function
	HandleUpdate():
	Int {

		$Opt = NULL;
		$Files = NULL;
		$File = NULL;

		$Command = NULL;
		$Output = NULL;
		$Result = NULL;

		////////

		$Opt = new Nether\Object\Mapped(NULL,[
			'ListFoundFiles' => $this->GetOption('list')
		]);

		$Files = glob(sprintf(
			'%s/data/domains/*.acmephp.yml',
			ProjectRoot
		));

		////////

		$this::Message(sprintf('found %d config files',count($Files)));

		if($Opt->ListFoundFiles) foreach($Files as $File)
		$this::Message(sprintf('-> %s',basename($File)));

		////////

		foreach($Files as $File) {
			$Command = sprintf(
				'php /opt/pegasusgate/bin/acmephp.phar run %s',
				escapeshellarg($File)
			);

			$this::Message(sprintf('>> running %s',basename($File)));
			exec($Command,$Output,$Result);

			if($Result !== 0) {
				$this::Message(sprintf('X> acmephp ended with error code %d',$Result));
				print_r($Output);
			}
		}

		return 0;
	}

})
->Run();
