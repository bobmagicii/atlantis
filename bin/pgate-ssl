#!/usr/bin/env php
<?php

require(sprintf(
	'%s/conf/start.php',
	dirname(__FILE__,2)
));

(new class extends Nether\Console\Client {

	#[Nether\Console\Meta\Subcommand]
	#[Nether\Console\Meta\Info('process the main site ssl.')]
	public function
	HandleMain():
	int {

		$Output = NULL;
		$Result = NULL;

		$AcmeFile = match(ENV) {
			'dev'   => '/conf/env/dev/acmephp.yml',
			default => '/conf/env/prod/acmephp.yml'
		};

		$Command = sprintf(
			'sudo /opt/ssl/acmephp.phar run %1$s%2$s',
			ProjectRoot,
			$AcmeFile
		);

		exec($Command,$Output,$Result);
		static::Messages(...$Output);

		static::Message('rehashing apache config');
		exec('sudo /usr/sbin/apachectl graceful');

		return 0;
	}

	#[Nether\Console\Meta\Subcommand]
	#[Nether\Console\Meta\Info('process all the configured user domains.')]
	#[Nether\Console\Meta\SubcommandOption('--list',FALSE,'print a list of the found config files.')]
	public function
	HandleUsers():
	int {

		$Opt = NULL;
		$Files = NULL;
		$File = NULL;

		$Command = NULL;
		$Output = NULL;
		$Result = NULL;

		////////

		$Opt = new Nether\Object\Mapped(NULL,[
			'ListFoundFiles' => $this->GetOption('list')
		]);

		$Files = glob(sprintf(
			'%s/data/domains/*.acmephp.yml',
			ProjectRoot
		));

		////////

		$this::Message(sprintf('found %d config files',count($Files)));

		if($Opt->ListFoundFiles) foreach($Files as $File)
		$this::Message(sprintf('-> %s',basename($File)));

		////////

		foreach($Files as $File) {
			$Command = sprintf(
				'php /opt/pegasusgate/bin/acmephp.phar run %s',
				escapeshellarg($File)
			);

			$this::Message(sprintf('>> running %s',basename($File)));
			exec($Command,$Output,$Result);

			if($Result !== 0) {
				$this::Message(sprintf('X> acmephp ended with error code %d',$Result));
				print_r($Output);
			}
		}

		static::Message('rehashing apache config');
		exec('sudo /usr/sbin/apachectl graceful');

		return 0;
	}

})
->Run();
